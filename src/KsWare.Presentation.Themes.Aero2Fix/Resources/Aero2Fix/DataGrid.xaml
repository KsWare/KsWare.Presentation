<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:aero2Fix="clr-namespace:KsWare.Presentation.Themes.Aero2Fix"
	mc:Ignorable="d" 
>
	
	<!-- DataGrid -->

	<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
		<!-- used by Aero2Fix.DataGrid.Style -->
		<!-- used by Aero2Fix.DataGrid.DropLocationIndicatorStyle -->
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Rectangle x:Name="Border" Fill="{DynamicResource Aero2Fix.ThemeColors.ControlBrush}" SnapsToDevicePixels="True"/>
						<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource Aero2Fix.ThemeColors.ControlDarkBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" TargetName="Border" Value="{DynamicResource Aero2Fix.ThemeColors.ControlDarkBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- -->

	<!-- ItemsPanel property -->

	<ItemsPanelTemplate x:Key="Aero2Fix.DataGrid.ItemsPanelTemplate">
		<DataGridRowsPresenter x:Name="PART_RowsPresenter" IsItemsHost="True"/>
	</ItemsPanelTemplate>

	<!-- CellStyle property -->

	<SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>

	<Style x:Key="Aero2Fix.DataGrid.CellStyle" TargetType="{x:Type DataGridCell}">
		<!-- explicit Aero2Fix.DataGrid.CellStyle -->

		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource Aero2Fix.ThemeColors.HighlightBrush}"/>
				<Setter Property="Foreground" Value="{DynamicResource Aero2Fix.ThemeColors.HighlightTextBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource Aero2Fix.ThemeColors.HighlightBrush}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="true"/>
					<Condition Property="Selector.IsSelectionActive" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background"  Value="{DynamicResource Aero2Fix.ThemeColors.InactiveSelectionHighlightBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource Aero2Fix.ThemeColors.InactiveSelectionHighlightBrush}"/>
				<Setter Property="Foreground"  Value="{DynamicResource Aero2Fix.ThemeColors.InactiveSelectionHighlightTextBrush}"/>
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource Aero2Fix.ThemeColors.GrayTextBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- ColumnHeaderStyle -->

	<Style x:Key="Aero2Fix.DataGrid.ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<!-- used by Aero2Fix.DataGrid.DataGridColumnHeaderStyle -->

		<Setter Property="Width" Value="8"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Cursor" Value="SizeWE"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Aero2Fix.DataGrid.ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
		<!-- explicit DataGrid.ColumnHeaderStyle -->

		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<aero2Fix:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</aero2Fix:DataGridHeaderBorder>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource Aero2Fix.DataGrid.ColumnHeaderGripperStyle}"/>
						<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource Aero2Fix.DataGrid.ColumnHeaderGripperStyle}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style >

	<!-- DragIndicatorStyle -->

	<Style x:Key="Aero2Fix.DataGrid.DragIndicatorStyle" TargetType="{x:Type DataGridColumnHeader}">
		<!-- explicit DataGrid.DragIndicatorStyle -->

		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<aero2Fix:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</aero2Fix:DataGridHeaderBorder>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource Aero2Fix.DataGrid.ColumnHeaderGripperStyle}"/>
						<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource Aero2Fix.DataGrid.ColumnHeaderGripperStyle}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Style property -->

	<Style x:Key="Aero2Fix.DataGridStyle" TargetType="{x:Type DataGrid}">
		
		<Setter Property="Background" Value="{DynamicResource Aero2Fix.ThemeColors.ControlBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource Aero2Fix.ThemeColors.ControlTextBrush}"/>
		<Setter Property="BorderBrush" Value="#FF688CAF"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
										<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<!-- TODO add explicit styles/Templates -->
		
		<Style.Triggers>
<!-- code of 4.5 doesn't work in 4.0 -->
<!--			<MultiTrigger>-->
<!--				<MultiTrigger.Conditions>-->
<!--					<Condition Property="IsGrouping" Value="true"/>-->
<!--					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
<!--				</MultiTrigger.Conditions>-->
<!--				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>-->
<!--			</MultiTrigger>-->
<!-- does work in 4.0 -->
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
		</Style.Triggers>
	</Style>


	<!-- explicit DataGrid.DropIndicatorStyle -->

	<Style x:Key="Aero2Fix.DataGrid.DropLocationIndicatorStyle" TargetType="{x:Type DataGrid}">
		<Setter Property="Background" Value="{DynamicResource Aero2Fix.ThemeColors.ControlBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource Aero2Fix.ThemeColors.ControlTextBrush}"/>
		<Setter Property="BorderBrush" Value="#FF688CAF"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
										<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<!-- code of 4.5 doesn't work in 4.0 -->
			<!--			<MultiTrigger>-->
			<!--				<MultiTrigger.Conditions>-->
			<!--					<Condition Property="IsGrouping" Value="true"/>-->
			<!--					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
			<!--				</MultiTrigger.Conditions>-->
			<!--				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>-->
			<!--			</MultiTrigger>-->
			<!-- does work in 4.0 -->
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- RowHeaderStyle -->

	<BooleanToVisibilityConverter x:Key="Aero2Fix.DataGrid.Bool2VisibilityConverter"/>
	
	<Style x:Key="Aero2Fix.DataGrid.RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Height" Value="8"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Cursor" Value="SizeNS"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Aero2Fix.DataGrid.RowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
					<Grid>
						<aero2Fix:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
							<StackPanel Orientation="Horizontal">
								<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
								<Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource Aero2Fix.DataGrid.Bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
							</StackPanel>
						</aero2Fix:DataGridHeaderBorder>
						<Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource Aero2Fix.DataGrid.RowHeaderGripperStyle}" VerticalAlignment="Top"/>
						<Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource Aero2Fix.DataGrid.RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- explicit DataGrid.RowStyle -->
	<Style x:Key="Aero2Fix.DataGrid.RowStyle" TargetType="{x:Type DataGridRow}">
		<Setter Property="Background" Value="{DynamicResource Aero2Fix.ThemeColors.WindowBrush}"/>
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
		<Setter Property="ValidationErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRow}">
					<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<SelectiveScrollingGrid>
							<SelectiveScrollingGrid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</SelectiveScrollingGrid.ColumnDefinitions>
							<SelectiveScrollingGrid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</SelectiveScrollingGrid.RowDefinitions>
							<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
							<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
						</SelectiveScrollingGrid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<!-- code of 4.5 doesn't work in 4.0 -->
<!--			<Trigger Property="IsNewItem" Value="True">-->
<!--				<Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>-->
<!--			</Trigger>-->
		</Style.Triggers>
	</Style>

	<DataTemplate x:Key="Aero2Fix.DataGrid.ItemTemplate.Empty">
		<Grid/>
	</DataTemplate>

	<Style x:Key="Aero2Fix.DataGrid.FocusVisualStyle.Empty" TargetType="{x:Type Control}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Control}">
					<Grid/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="Aero2Fix.DataGrid.RowDetailsTemplate.Empty">
		<Grid/>
	</DataTemplate>

	<DataTemplate x:Key="Aero2Fix.DataGrid.RowHeaderTemplate.Empty">
		<Grid/>
	</DataTemplate>

	<ControlTemplate x:Key="Aero2Fix.DataGrid.RowValidationErrorTemplate.Empty">
		<Grid/>
	</ControlTemplate>
	
	<Grid x:Key="TestDataGrid">
		<DataGrid HorizontalAlignment="Center" VerticalAlignment="Center" 
			Style                      = "{DynamicResource Aero2Fix.DataGrid.Style}" 
			ItemsPanel                 = "{DynamicResource Aero2Fix.DataGrid.ItemsPanelTemplate}" 
			CellStyle                  = "{DynamicResource Aero2Fix.DataGrid.CellStyle}" 
			ColumnHeaderStyle          = "{DynamicResource Aero2Fix.DataGrid.ColumnHeaderStyle}" 
			DragIndicatorStyle         = "{DynamicResource Aero2Fix.DataGrid.DragIndicatorStyle}" 
			DropLocationIndicatorStyle = "{DynamicResource Aero2Fix.DataGrid.DropLocationIndicatorStyle}" 
			RowHeaderStyle             = "{DynamicResource Aero2Fix.DataGrid.RowHeaderStyle}" 
			RowStyle                   = "{DynamicResource Aero2Fix.DataGrid.RowStyle}" 
			ItemTemplate               = "{DynamicResource Aero2Fix.DataGrid.ItemTemplate.Empty}" 
			FocusVisualStyle           = "{DynamicResource Aero2Fix.DataGrid.FocusVisualStyle.Empty}" 
			RowDetailsTemplate         = "{DynamicResource Aero2Fix.DataGrid.RowDetailsTemplate.Empty}" 
			RowHeaderTemplate          = "{DynamicResource Aero2Fix.DataGrid.RowHeaderTemplate.Empty}" 
			RowValidationErrorTemplate = "{DynamicResource Aero2Fix.DataGrid.RowValidationErrorTemplate.Empty}" 
		/>
	</Grid>
	
	
	<!-- #region ### Columns ####################################################################### -->
	
	<!-- #region DataGridComboBoxColumn -->
	
	<Style x:Key="Aero2Fix.DataGridComboBoxColumn.EditingElementStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
	</Style>

	<Style x:Key="Aero2Fix.DataGridComboBoxColumn.ElementStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
	</Style>

	<Grid x:Key="DataGridComboBoxColumnTest">
		<DataGrid HorizontalAlignment="Center" VerticalAlignment="Center">
			<DataGrid.Columns>
				<DataGridComboBoxColumn 
					ElementStyle        = "{DynamicResource Aero2Fix.DataGridComboBoxColumn.ElementStyle}" 
					EditingElementStyle = "{DynamicResource Aero2Fix.DataGridComboBoxColumn.EditingElementStyle}" 
					CellStyle           = "{DynamicResource Aero2Fix.DataGrid.CellStyle}" 
					DragIndicatorStyle  = "{DynamicResource Aero2Fix.DataGrid.DragIndicatorStyle}" 
					HeaderStyle         = "{DynamicResource Aero2Fix.DataGrid.ColumnHeaderStyle}"/>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>
	
	<!-- #region DataGridComboBoxColumn -->
	
	<Style x:Key="Aero2Fix.DataGridCheckBoxColumn.EditingElementStyle" TargetType="{x:Type CheckBox}">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
	</Style>

	<Style x:Key="Aero2Fix.DataGridCheckBoxColumn.ElementStyle" TargetType="{x:Type CheckBox}">
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
	</Style>

	<Grid x:Key="DataGridCheckBoxColumnTest">
		<DataGrid HorizontalAlignment="Center" VerticalAlignment="Center">
			<DataGrid.Columns>
				<DataGridCheckBoxColumn 
					CellStyle           = "{DynamicResource Aero2Fix.DataGrid.CellStyle}" 
					DragIndicatorStyle  = "{DynamicResource DragIndicatorStyle1}" 
					EditingElementStyle = "{DynamicResource Aero2Fix.DataGridCheckBoxColumn.EditingElementStyle}" 
					ElementStyle        = "{DynamicResource Aero2Fix.DataGridCheckBoxColumn.ElementStyle}" 
					HeaderStyle         = "{DynamicResource Aero2Fix.DataGrid.HeaderStyle}"/>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>

	<!-- #endregion DataGridCheckBoxColumn -->

	<!-- #region DataGridHyperlinkColumn -->

	<Style x:Key="Aero2Fix.DataGridHyperlinkColumn.ElementStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Margin" Value="2,0"/>
	</Style>

	<Style x:Key="Aero2Fix.DataGridHyperlinkColumn.EditingElementStyle" TargetType="{x:Type TextBox}">
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
	</Style>

	<Grid x:Key="DataGridHyperlinkColumnTest">
		<DataGrid HorizontalAlignment="Center" VerticalAlignment="Center">
			<DataGrid.Columns>
				<DataGridHyperlinkColumn 
					CellStyle           = "{DynamicResource CellStyle1}" 
					DragIndicatorStyle  = "{DynamicResource DragIndicatorStyle1}" 
					ElementStyle        = "{DynamicResource Aero2Fix.DataGridHyperlinkColumn.ElementStyle}" 
					EditingElementStyle = "{DynamicResource Aero2Fix.DataGridHyperlinkColumn.EditingElementStyle}" 
					HeaderStyle         = "{DynamicResource Aero2Fix.DataGrid.HeaderStyle}"/>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>

	<!-- #endregion DataGridHyperlinkColumn -->

	<!-- #region DataGridTextColumn -->

	<Style x:Key="Aero2Fix.DataGridTextColumn.EditingElementStyle" TargetType="{x:Type TextBox}">
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0"/>
	</Style>

	<Style x:Key="Aero2Fix.DataGridTextColumn.ElementStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Margin" Value="2,0"/>
	</Style>

	<Grid x:Key="DataGridTextColumnTest">
		<DataGrid HorizontalAlignment="Center" VerticalAlignment="Center">
			<DataGrid.Columns>
				<DataGridTextColumn 
					CellStyle           = "{DynamicResource CellStyle1}" 
					DragIndicatorStyle  = "{DynamicResource DragIndicatorStyle1}" 
					EditingElementStyle = "{DynamicResource Aero2Fix.DataGridTextColumn.EditingElementStyle}" 
					ElementStyle        = "{DynamicResource Aero2Fix.DataGridTextColumn.ElementStyle}" 
					HeaderStyle         = "{DynamicResource Aero2Fix.DataGrid.HeaderStyle}"/>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>
	
	<!-- #endregion DataGridTextColumn-->

	<!-- #region DataGridTemplateColumn -->

	<Grid x:Key="DataGridTemplateColumnTest">
		<DataGrid HorizontalAlignment="Center" VerticalAlignment="Center">
			<DataGrid.Columns>
				<DataGridTemplateColumn 
					CellStyle          = "{DynamicResource CellStyle1}" 
					DragIndicatorStyle = "{DynamicResource DragIndicatorStyle1}" 
					HeaderStyle        = "{DynamicResource Aero2Fix.DataGrid.HeaderStyle}"
				/>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>
	
	<!-- #endregion DataGridTemplateColumn -->

	<!-- #endregion Columns -->
</ResourceDictionary>