// ***********************************************************************
// Assembly         : KsWare.Presentation.Core
// Author           : SchreinerK
// Created          : 2018-03-17
//
// Last Modified By : SchreinerK
// Last Modified On : 2018-03-17
// ***********************************************************************
// <copyright file="DataTypeConverter.cs" company="KsWare">
//     Copyright © 2018 by KsWare
// </copyright>
// <summary></summary>
// ***********************************************************************

using System;
using System.Globalization;
using System.Windows.Data;

namespace KsWare.Presentation {

	/// <summary>
	/// Class TypeConverter.
	/// </summary>
	/// <seealso cref="System.Windows.Data.IValueConverter" />
	/// <autogeneratedoc />
	public class DataTypeConverter : IValueConverter {

		private static readonly Lazy<DataTypeConverter> LazyDefault =
			new Lazy<DataTypeConverter>(() => new DataTypeConverter());

		/// <summary>
		/// Gets the default TypeConverter.
		/// </summary>
		/// <value>The default TypeConverter.</value>
		public static DataTypeConverter Default => LazyDefault.Value;

		/// <inheritdoc />
		public object Convert(object value, Type targetType, object parameter, CultureInfo culture) {
			return System.Convert.ChangeType(value, targetType, culture);
		}

		/// <inheritdoc />
		public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) {
			return System.Convert.ChangeType(value, targetType, culture);
		}
	}

	/// <summary>
	/// Class InvertBoolConverter.
	/// </summary>
	/// <seealso cref="System.Windows.Data.IValueConverter" />
	/// <autogeneratedoc />
	public class InvertBoolConverter : IValueConverter {

		private static readonly Lazy<InvertBoolConverter> LazyDefault = new Lazy<InvertBoolConverter>(() => new
			InvertBoolConverter());

		/// <summary>
		/// Gets the default InvertBoolConverter.
		/// </summary>
		/// <value>The default InvertBoolConverter.</value>
		public static InvertBoolConverter Default => LazyDefault.Value;

		/// <inheritdoc />
		public object Convert(object value, Type targetType, object parameter, CultureInfo culture) {
			return value is bool b
				? System.Convert.ChangeType(!b,    targetType, culture)
				: System.Convert.ChangeType(value, targetType, culture);
		}

		/// <inheritdoc />
		public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) {
			return value is bool b 
				? System.Convert.ChangeType(!b, targetType, culture) 
				: System.Convert.ChangeType(value, targetType, culture);
		}
	}

}